

Name : Pratiksha Jadhav
Roll no : 50
Grno : 141783
Subject : Web Development Application
All Assignments
Date : 22/APR/2017

----------------------------------------------------------------------------------------------------------------------------

Assignment 1

Q1. Describe the following Linux commands : 

	a) pwd : Displays the present working directory.

	b) top : Used to show all the running processes
	in Linux Environment.

	c) man : Man is the interface used to show all
	the system's manual.

	d) cat : cat command allows us to create
	single or multiple files, view contain of file, concatenate files and
	redirect output in terminal or files.

	e) chmod : chmod changes the permissions of each
	given file according to mode, where mode describes the permissions to
	modify. Mode can be specified with octal numbers or with letters.


Q2. Difference between chmod a+x, chmode 755,
	chmod +x
	chmod a+x modifies the argument's mode
	while chmod 755 sets it.


Q3. Describe REPL
	
REPL stands for Read Eval Print Loop and it
	represents a computer environment like a Windows console or
	Unix/Linux shell where a command is entered and the system responds
	with an output in an interactive mode. Node.js or Node comes
	bundled with a REPL environment. It performs the following tasks âˆ’
	Read âˆ’ Reads user's input, parses the
	input into JavaScript data-structure, and stores in memory.
	Eval âˆ’ Takes and evaluates the data
	structure.
	Print âˆ’ Prints the result.
	Loop âˆ’ Loops the above command until the
	user presses ctrl-c twice.
	The REPL feature of Node is very useful in
	experimenting with Node.js codes and to debug JavaScript codes.


Q4. Iterators in ruby.
	
	a) Ruby each Iterator:
	The each iterator returns all the elements of an
	array or a hash.

	b) Ruby collect Iterator:
	The collect iterator returns all the
	elements of a collection.

Q5. Write a ruby program for operator
overloading :

	class Tester1
	 def initialize x
	   @x = x
	 end
	 def +(y)
	   @x.to_s + y.to_s
	 end
	end
	a = Tester1.new 11.to_s
	puts(a+22)


	pratiksha@pratiksha-DELL-PC:~/WAD$ 
	ruby test.rb
	1122
	pratiksha@pratiksha-DELL-PC:~/WAD$


Assignment 2

Install ruby using rvm
Q1. What rvm is used for?
	
Ruby on Rails is one of the most popular application stacks for developers wishing to create sites and web apps. The Ruby programming language, coupled with the Rails development framework, makes app development simple.Since Ruby on
	Rails doesn't come in a neatly packaged format, getting the framework installed used to be one of the more difficult parts of getting started. Luckily, tools like rvm, the Ruby Version Manager, have made installation simple.
	Ruby Version Manager, often abbreviated as RVM,is a unix-like software platform designed to manage multiple installations of Ruby on the same device. The entire ruby environment including the Ruby interpreter, installed RubyGems, and documentation is partitioned.RVM provides features for organization of Ruby gems through "gemsets", collections of gems separated by a namespace and associated Ruby installation. 


Q2. What is "#!"?
	In computing, a shebang is the
	character sequence consisting of the characters number
	sign and exclamation mark (#!) at the beginning of
	a script. It is also
	called sha-bang hashbang,pound-bang, or hash-pling.The
	shebang line is usually ignored by the interpreter because the "#"
	character is a comment marker in many scripting languages;
	some language interpreters that do not use the hash mark to begin
	comments (such as Scheme) still may ignore the shebang line in
	recognition of its purpose.[8] Other solutions rely on a
	preprocessor that evaluates and removes the shebang line and sends
	the remainder of the script to a compiler or interpreter.

Q3. Ruby program to find nth number in
fibonaccci series.
	def Fib(n)
		i=2
		a=0
		b=1
		p a
		p b
		while i<n
			c = a + b
			a = b
			b = c
			p c
			i = i + 1
		end
	end

	n = (ARGV[0] || 4).to_i
	Fib(n)


Q4. Ruby program to solve Josephus Problem
	def Jos(n,k)
		a = (1..n).to_a
		p a
		while a.length != 1
			a.rotate!(k-1).shift
			p a
		end
		p 'Winner is: '
		p a[0]
	end

	n = (ARGV[0] || 5).to_i
	k = (ARGV[1] || 2).to_i
	Jos(n,k)

Assignment 3
The github saga

Q1. What is git?
	Git is a version control system (VCS)
	for tracking changes in computer files and coordinating
	work on those files among multiple people. It is primarily used
	for software development, but it can be used to keep track
	of changes in any files. As a distributed revision
	control system it is aimed at speed,[10] data
	integrity, and support for distributed, non-linear workflows.
	Git was created by Linus Torvalds in
	2005 for development of the Linux kernel, with other kernel
	developers contributing to its initial development. Its current
	maintainer since 2005 is Junio Hamano.
	As with most other distributed version control
	systems, and unlike most clientâ€“server systems, every
	Git directory on every computer is a
	full-fledged repository with complete history and full
	version tracking abilities, independent of network access or a
	central server.


Q2. What is Github?
	GitHub is a web-based Git or version
	control repository and Internet hosting service. It offers
	all of the distributed version control and source code
	management (SCM) functionality of Git as well as adding its own
	features. It provides access controland several collaboration
	features such as bug tracking, feature requests, task
	management, and wikis for every project.
	GitHub offers both plans for private and
	free repositories on the same account which are
	commonly used to host open-source software projects. As
	of April 2017, GitHub reports having almost 20 million users and 57
	million repositories,making it the largest host of source
	code in the world.
	GitHub has a mascot called Octocat, a
	cat with five tentacles and a human-like face.
	Development of the GitHub platform began on 1
	October 2007. The site was launched in April 2008 by Tom
	Preston-Werner, Chris Wanstrath, and PJ Hyett after it had been
	made available for a few months prior as a beta release.
	Projects on GitHub can be accessed and
	manipulated using the standard Git command-line interface and all of
	the standard Git commands work with it. GitHub also allows registered
	and non-registered users to browse public repositories on the site.
	Multiple desktop clients and Git plugins have also been
	created by GitHub and other third parties that integrate with the
	platform.
	The site provides social networking-like
	functions such as feeds, followers, wikis (using wiki
	software called Gollum) and a social network graph to
	display how developers work on their versions ("forks") of
	a repository and what fork (and branch within that fork) is newest.
	A user must create an account in order to
	contribute content to the site, but public repositories can be
	browsed and downloaded by anyone. With a registered user account,
	users are able to discuss, manage, create repositories, submit
	contributions to others' repositories, and review changes to
	code.
	The software that runs GitHub was written
	using Ruby on Rails and Erlang by GitHub, Inc.
	developers Chris Wanstrath, PJ Hyett, and Tom
	Preston-Werner


Q3. Create an account on Github
	
	Was done.

Assignment 4
Sinatra Saga


Q1. What is a bundler?
	Bundler provides a consistent environment for
	Ruby projects by tracking and installing the exact gems and versions
	that are needed.
	Bundler is an exit from dependency hell, and
	ensures that the gems you need are present in development, staging,
	and production. Starting work on a project is as simple as bundle
	install.
	$ gem install bundler â€“ installs bundler


Q2. What does the bundle install command do?
	Installs the dependencies specified in the
	Gemfile.Install the gems specified in your Gemfile(5). If this
	is the first time you run bundle install (and a Gemfile.lock does
	not exist), bundler will fetch all remote sources, resolve
	dependencies and install all needed gems.
	If a gemfile.lock does exist, and you
	have not updated your Gemfile(5), bundler will fetch all remote
	sources, but use the dependencies specified in
	the Gemfile.lock instead of resolving dependencies.
	If a Gemfile.lock does exist, and you
	have updated your Gemfile(5), bundler will use the dependencies
	in theGemfile.lock for all gems that you did not update, but
	will re-resolve the dependencies of gems that you did update. 


Q3. What is a gemfile?
	A Gemfile is a file we create which is
	used for describing gem dependencies for Ruby programs. A gem is a
	collection of Ruby code that we can extract into a â€œcollectionâ€
	which we can call later.A  Gemfile is a file we create which is
	used for describing gem dependencies for Ruby programs. A gem is a
	collection of Ruby code that we can extract into a â€œcollectionâ€
	which we can call later.
	Your Gemfile should always be in the root of
	your project directory, this is where Bundler expects it to be and it
	is the standard place for any package manager style files to live.
	It is useful to note that your Gemfile is
	evaluated as Ruby code. When it is evaluated by Bundler the
	context it is in allows us access to certain methods that we will use
	to explain our gem requirements.Ruby developers use Gemfiles all the
	time, and most of us know how to do the basics. In this post I want
	to dive deep into everything we can do with a Gemfile.


Assignment 5
Sinatra : routes

Q1. What are routes? 
	Sinatra routes are simply Ruby methods with an
	associated code block that get called every time a request matches
	the given route pattern.The :id part of the route pattern
	is a named parameter and will be accessible in your code
	from the params hash: params[:id], but I'll describe these in
	further detail later in this post.Routes are matched in the exact
	order that they are defined in your code, this means that second
	route in the below example will never get matched because we have the
	exact same pattern further up in the code.The explicit routes should
	always be added towards the top of your route file or controller. I
	can guarantee you that this has been the source a many hours of
	frustration by developers working with Sinatra.Route method names
	correspond to HTTP 1.1 request method names to make things
	easier to remember.


Q2. How to add a new gem to your project?
	Add whatever gem you want to use in Gemfile.
	Execute bundle install


Q3. Sinatra application to calcule nth fibonaci
number.

	require 'sinatra'

	get '/' do
		name = params[:name]
		if name!=nil
			return "Hello #{name}!"
		else 
			return "No parameter!"
		end
	end

	get '/Fibo' do
		n = params[:n]
		if n!=nil
			i = n.to_i
			num = Fib(i)
			return "Value = #{num}"
		else
			return "No parameters given!"
		end
		
	end
	def Fib(n)
		i=2
		a=0
		b=1
		while i<n
			c = a + b
			a = b
			b = c
			i = i + 1
		end
		return c 
	end


Assignment 6
Deploy sinatra app on Heroku
Q1. Find a sinatra application on Github and run
it locally.
Q2. Deploy the application to Heroku.


